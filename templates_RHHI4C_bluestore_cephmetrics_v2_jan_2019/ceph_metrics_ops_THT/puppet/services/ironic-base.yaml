heat_template_version: queens

description: >
  OpenStack Ironic services configured with Puppet

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  Debug:
    default: false
    description: Set to True to enable debugging on all services.
    type: boolean
  IronicDebug:
    default: ''
    description: Set to True to enable debugging Ironic services.
    type: string
    constraints:
      - allowed_values: [ '', 'true', 'True', 'TRUE', 'false', 'False', 'FALSE']
  IronicDefaultResourceClass:
    default: ''
    description: Default resource class to use for new nodes.
    type: string
  IronicPassword:
    description: The password for the Ironic service and db account, used by the Ironic services
    type: string
    hidden: true
  RabbitUserName:
    default: guest
    description: The username for RabbitMQ
    type: string
  RabbitPassword:
    description: The password for RabbitMQ
    type: string
    hidden: true
  RabbitClientPort:
    default: 5672
    description: Set rabbit subscriber port, change this if using SSL
    type: number
  RabbitClientUseSSL:
    default: false
    description: >
        Rabbit client subscriber parameter to specify
        an SSL connection to the RabbitMQ host.
    type: string

conditions:
  service_debug_unset: {equals : [{get_param: IronicDebug}, '']}
  default_rsc_unset: {equals : [{get_param: IronicDefaultResourceClass}, '']}

outputs:
  role_data:
    description: Role data for the Ironic role.
    value:
      service_name: ironic_base
      config_settings:
        map_merge:
        -
          ironic::database_connection:
            make_url:
              scheme: {get_param: [EndpointMap, MysqlInternal, protocol]}
              username: ironic
              password: {get_param: IronicPassword}
              host: {get_param: [EndpointMap, MysqlInternal, host]}
              path: /ironic
              query:
                read_default_file: /etc/my.cnf.d/tripleo.cnf
                read_default_group: tripleo
          ironic::debug:
            if:
            - service_debug_unset
            - {get_param: Debug }
            - {get_param: IronicDebug }
          ironic::rabbit_userid: {get_param: RabbitUserName}
          ironic::rabbit_password: {get_param: RabbitPassword}
          ironic::rabbit_port: {get_param: RabbitClientPort}
          ironic::rabbit_use_ssl: {get_param: RabbitClientUseSSL}
        -
          if:
          - default_rsc_unset
          - {}
          - ironic::default_resource_class: {get_param: IronicDefaultResourceClass}
      step_config: |
        include ::tripleo::profile::base::ironic
