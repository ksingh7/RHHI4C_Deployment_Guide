heat_template_version: pike

description: >
  NTP service deployment using puppet, this YAML file
  creates the interface between the HOT template
  and the puppet manifest that actually installs
  and configure NTP.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  NtpServer:
    default: ['pool.ntp.org']
    description: NTP servers list. Defaulted to pool.ntp.org in order to
                 have a sane default for Pacemaker deployments when
                 not configuring this parameter by default.
    type: comma_delimited_list
  NtpIburstEnable:
    default: true
    description: Specifies whether to enable the iburst option for every NTP
                 peer. If iburst is enabled, when the ntp server is unreachable
                 ntp will send a burst of eight packages instead of one. This
                 is designed to speed up the initial syncrhonization.
    type: boolean


outputs:
  role_data:
    description: Role ntp using composable services.
    value:
      service_name: ntp
      config_settings:
        ntp::servers: {get_param: NtpServer}
        ntp::iburst_enable: {get_param: NtpIburstEnable}
        tripleo.ntp.firewall_rules:
          '105 ntp':
            dport: 123
            proto: udp
      step_config: |
        include ::tripleo::profile::base::time::ntp
