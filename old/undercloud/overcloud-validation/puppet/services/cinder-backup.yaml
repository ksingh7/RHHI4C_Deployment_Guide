heat_template_version: pike

description: >
  OpenStack Cinder Backup service configured with Puppet

parameters:
  CinderBackupBackend:
    default: swift
    description: The short name of the Cinder Backup backend to use.
    type: string
    constraints:
    - allowed_values: ['swift', 'ceph']
  CinderBackupRbdPoolName:
    default: backups
    type: string
  CephClientUserName:
    default: openstack
    type: string
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  MonitoringSubscriptionCinderBackup:
    default: 'overcloud-cinder-backup'
    type: string

resources:

  CinderBase:
    type: ./cinder-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Cinder Backup role.
    value:
      service_name: cinder_backup
      monitoring_subscription: {get_param: MonitoringSubscriptionCinderBackup}
      config_settings:
        map_merge:
          - get_attr: [CinderBase, role_data, config_settings]
          - cinder::backup::ceph::backup_ceph_user: {get_param: CephClientUserName}
            cinder::backup::ceph::backup_ceph_pool: {get_param: CinderBackupRbdPoolName}
            cinder::backup::swift::backup_swift_container: volumebackups
      step_config:
        str_replace:
          template: "include ::tripleo::profile::base::cinder::backup::DRIVER"
          params:
            DRIVER: {get_param: CinderBackupBackend}
