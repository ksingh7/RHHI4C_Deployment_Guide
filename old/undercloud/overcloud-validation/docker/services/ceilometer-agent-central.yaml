heat_template_version: pike

description: >
  OpenStack containerized Ceilometer Agent Central service

parameters:
  DockerCeilometerCentralImage:
    description: image
    type: string
  DockerCeilometerConfigImage:
    description: The container image to use for the ceilometer config_volume
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  UpgradeRemoveUnusedPackages:
    default: false
    description: Remove package if the service is being disabled during upgrade
    type: boolean

resources:

  ContainersCommon:
   type: ./containers-common.yaml

  CeilometerAgentCentralBase:
    type: ../../puppet/services/ceilometer-agent-central.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Ceilometer Agent Central role.
    value:
      service_name: {get_attr: [CeilometerAgentCentralBase, role_data, service_name]}
      config_settings: {get_attr: [CeilometerAgentCentralBase, role_data, config_settings]}
      logging_source: {get_attr: [CeilometerAgentCentralBase, role_data, logging_source]}
      logging_groups: {get_attr: [CeilometerAgentCentralBase, role_data, logging_groups]}
      step_config: &step_config
        get_attr: [CeilometerAgentCentralBase, role_data, step_config]
      service_config_settings: {get_attr: [CeilometerAgentCentralBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: ceilometer
        puppet_tags: ceilometer_config
        step_config: *step_config
        config_image: {get_param: DockerCeilometerConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/ceilometer_agent_central.json:
          command: /usr/bin/ceilometer-polling --polling-namespaces central --logfile /var/log/ceilometer/central.log
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
      docker_config:
        step_3:
          ceilometer_init_log:
            start_order: 0
            image: &ceilometer_agent_central_image {get_param: DockerCeilometerCentralImage}
            user: root
            command: ['/bin/bash', '-c', 'chown -R ceilometer:ceilometer /var/log/ceilometer']
            volumes:
              - /var/log/containers/ceilometer:/var/log/ceilometer
        step_4:
          ceilometer_agent_central:
            image: *ceilometer_agent_central_image
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/ceilometer_agent_central.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/ceilometer/:/var/lib/kolla/config_files/src:ro
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
        step_5:
          ceilometer_gnocchi_upgrade:
            start_order: 1
            image: *ceilometer_agent_central_image
            net: host
            detach: false
            privileged: false
            user: root
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/config-data/ceilometer/etc/ceilometer/:/etc/ceilometer/:ro
                  - /var/log/containers/ceilometer:/var/log/ceilometer
            command:
              - '/usr/bin/bootstrap_host_exec'
              - 'ceilometer_agent_central'
              - "su ceilometer -s /bin/bash -c 'for n in {1..10}; do /usr/bin/ceilometer-upgrade --skip-metering-database && exit 0 || sleep 5; done; exit 1'"
      host_prep_tasks:
        - name: create persistent logs directory
          file:
            path: /var/log/containers/ceilometer
            state: directory
      upgrade_tasks:
        - name: Stop and disable ceilometer agent central service
          tags: step2
          service: name=openstack-ceilometer-central state=stopped enabled=no
        - name: Remove openstack-ceilometer-central package if operator requests it
          yum: name=openstack-ceilometer-central state=removed
          tags: step2
          ignore_errors: True
          when: {get_param: UpgradeRemoveUnusedPackages}
