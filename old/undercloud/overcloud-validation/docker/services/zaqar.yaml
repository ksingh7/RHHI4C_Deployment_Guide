heat_template_version: pike

description: >
  OpenStack containerized Zaqar services

parameters:
  DockerZaqarImage:
    description: image
    type: string
  DockerZaqarConfigImage:
    description: The container image to use for the zaqar config_volume
    type: string
  ZaqarManagementStore:
    type: string
    description: The management store for Zaqar
    default: mongodb
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EnableInternalTLS:
    type: boolean
    default: false

conditions:
  zaqar_management_store_sqlalchemy: {equals : [{get_param: ZaqarManagementStore}, 'sqlalchemy']}
  internal_tls_enabled: {get_param: EnableInternalTLS}

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MySQLClient:
    type: ../../puppet/services/database/mysql-client.yaml

  ZaqarBase:
    type: ../../puppet/services/zaqar-api.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      EnableInternalTLS: {get_param: EnableInternalTLS}

outputs:
  role_data:
    description: Role data for the Zaqar API role.
    value:
      service_name: {get_attr: [ZaqarBase, role_data, service_name]}
      config_settings: {get_attr: [ZaqarBase, role_data, config_settings]}
      logging_source: {get_attr: [ZaqarBase, role_data, logging_source]}
      logging_groups: {get_attr: [ZaqarBase, role_data, logging_groups]}
      step_config: &step_config
        list_join:
          - "\n"
          - - {get_attr: [ZaqarBase, role_data, step_config]}
            - {get_attr: [MySQLClient, role_data, step_config]}
      service_config_settings: {get_attr: [ZaqarBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: zaqar
        puppet_tags: zaqar_config
        step_config: *step_config
        config_image: {get_param: DockerZaqarConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/zaqar.json:
          command: /usr/sbin/httpd -DFOREGROUND
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
        /var/lib/kolla/config_files/zaqar_websocket.json:
          command: /usr/bin/zaqar-server --config-file /etc/zaqar/zaqar.conf --config-file /etc/zaqar/1.conf
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/log/zaqar
              owner: zaqar:zaqar
              recurse: true
      docker_config:
        map_merge:
          -
            if:
            - zaqar_management_store_sqlalchemy
            -
              step_2:
                zaqar_init_log:
                  image: &zaqar_image {get_param: DockerZaqarImage}
                  user: root
                  volumes:
                    - /var/log/containers/zaqar:/var/log/zaqar
                    - /var/log/containers/httpd/zaqar:/var/log/httpd
                  command: ['/bin/bash', '-c', 'chown -R zaqar:zaqar /var/log/zaqar']
              step_3:
                zaqar_db_sync:
                  image: *zaqar_image
                  net: host
                  privileged: false
                  detach: false
                  user: root
                  volumes:
                    list_concat:
                      - {get_attr: [ContainersCommon, volumes]}
                      -
                        - /var/lib/config-data/zaqar/etc/zaqar/:/etc/zaqar/:ro
                        - /var/log/containers/zaqar:/var/log/zaqar
                        - /var/log/containers/httpd/zaqar:/var/log/httpd
                  command: "/usr/bin/bootstrap_host_exec zaqar_api su zaqar -s /bin/bash -c 'zaqar-sql-db-manage upgrade head'"
            - {}
          - step_4:
              zaqar:
                image: *zaqar_image
                net: host
                privileged: false
                restart: always
                # NOTE(mandre) kolla image changes the user to 'zaqar', we need it
                # to be root to run httpd
                user: root
                volumes:
                  list_concat:
                    - {get_attr: [ContainersCommon, volumes]}
                    -
                      - /var/lib/kolla/config_files/zaqar.json:/var/lib/kolla/config_files/config.json:ro
                      - /var/lib/config-data/puppet-generated/zaqar/:/var/lib/kolla/config_files/src:ro
                      - /var/log/containers/zaqar:/var/log/zaqar
                      - /var/log/containers/httpd/zaqar:/var/log/httpd
                      -
                        if:
                          - internal_tls_enabled
                          - /etc/pki/tls/certs/httpd:/etc/pki/tls/certs/httpd:ro
                          - ''
                      -
                        if:
                          - internal_tls_enabled
                          - /etc/pki/tls/private/httpd:/etc/pki/tls/private/httpd:ro
                          - ''
                environment:
                  - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
              zaqar_websocket:
                image: *zaqar_image
                net: host
                privileged: false
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContainersCommon, volumes]}
                    -
                      - /var/lib/kolla/config_files/zaqar_websocket.json:/var/lib/kolla/config_files/config.json:ro
                      - /var/lib/config-data/puppet-generated/zaqar/:/var/lib/kolla/config_files/src:ro
                      - /var/log/containers/zaqar:/var/log/zaqar
                      - /var/log/containers/httpd/zaqar:/var/log/httpd
                environment:
                  - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent logs directory
          file:
            path: "{{ item }}"
            state: directory
          with_items:
            - /var/log/containers/zaqar
            - /var/log/containers/httpd/zaqar
      upgrade_tasks:
        - name: Stop and disable zaqar service
          tags: step2
          service: name=httpd state=stopped enabled=no
      metadata_settings:
        get_attr: [ZaqarBase, role_data, metadata_settings]
