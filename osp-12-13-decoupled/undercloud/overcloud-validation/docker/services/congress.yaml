heat_template_version: pike

description: >
  OpenStack containerized Congress API service

parameters:
  DockerCongressApiImage:
    description: image
    type: string
  DockerCongressConfigImage:
    description: The container image to use for the congress config_volume
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  UpgradeRemoveUnusedPackages:
    default: false
    description: Remove package if the service is being disabled during upgrade
    type: boolean

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MySQLClient:
    type: ../../puppet/services/database/mysql-client.yaml

  CongressBase:
    type: ../../puppet/services/congress.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Congress API role.
    value:
      service_name: {get_attr: [CongressBase, role_data, service_name]}
      config_settings:
        map_merge:
          - get_attr: [CongressBase, role_data, config_settings]
      logging_source: {get_attr: [CongressBase, role_data, logging_source]}
      logging_groups: {get_attr: [CongressBase, role_data, logging_groups]}
      step_config: &step_config
        list_join:
          - "\n"
          - - {get_attr: [CongressBase, role_data, step_config]}
            - {get_attr: [MySQLClient, role_data, step_config]}
      service_config_settings: {get_attr: [CongressBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: congress
        puppet_tags: congress_config
        step_config: *step_config
        config_image: {get_param: DockerCongressConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/congress_api.json:
          command: /usr/bin/congress-server --config-file=/etc/congress/congress.conf --log-file=/var/log/congress/api.log
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/log/congress
              owner: congress:congress
              recurse: true
      docker_config:
        # db sync runs before permissions set by kolla_config
        step_2:
          congress_init_logs:
            image: &congress_api_image {get_param: DockerCongressApiImage}
            privileged: false
            user: root
            volumes:
              - /var/log/containers/congress:/var/log/congress
            command: ['/bin/bash', '-c', 'chown -R congress:congress /var/log/congress']
        step_3:
          congress_db_sync:
            image: *congress_api_image
            net: host
            privileged: false
            detach: false
            user: root
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  # FIXME(mandre) mounting /etc rw to workaround LP1696283
                  # This should go away anyway and mount the exact files it
                  # needs or use kolla set_configs.py
                  - /var/lib/config-data/congress/etc/:/etc/
                  - /var/log/containers/congress:/var/log/congress
            command: "/usr/bin/bootstrap_host_exec congress su congress -s /bin/bash -c 'congress-db-manage --config-file /etc/congress/congress.conf upgrade head'"
        step_4:
          congress_api:
            start_order: 15
            image: *congress_api_image
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/congress_api.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/congress/:/var/lib/kolla/config_files/src:ro
                  - /var/log/containers/congress:/var/log/congress
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent logs directory
          file:
            path: /var/log/containers/congress
            state: directory
      upgrade_tasks:
        - name: Stop and disable congress_api service
          tags: step2
          service: name=openstack-congress-server state=stopped enabled=no
        - name: Remove openstack-congress package if operator requests it
          yum: name=openstack-congress state=removed
          tags: step2
          ignore_errors: True
          when: {get_param: UpgradeRemoveUnusedPackages}
