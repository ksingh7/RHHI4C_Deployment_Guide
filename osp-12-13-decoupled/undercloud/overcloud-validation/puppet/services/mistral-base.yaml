heat_template_version: pike

description: >
  Openstack Mistral base service. Shared for all Mistral services.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json

  Debug:
    default: ''
    description: Set to True to enable debugging on all services.
    type: string
  MistralDebug:
    default: ''
    description: Set to True to enable debugging Mistral services.
    type: string
  RabbitPassword:
    description: The password for RabbitMQ
    type: string
    hidden: true
  RabbitUserName:
    default: guest
    description: The username for RabbitMQ
    type: string
  RabbitClientUseSSL:
    default: false
    description: >
        Rabbit client subscriber parameter to specify
        an SSL connection to the RabbitMQ host.
    type: string
  RabbitClientPort:
    default: 5672
    description: Set rabbit subscriber port, change this if using SSL
    type: number
  MistralPassword:
    description: The password for the Mistral service and db account, used by the Mistral services.
    type: string
    hidden: true
  KeystoneRegion:
    type: string
    default: 'regionOne'
    description: Keystone region for endpoint
  NotificationDriver:
    type: string
    default: 'messagingv2'
    description: Driver or drivers to handle sending notifications.
    constraints:
      - allowed_values: [ 'messagingv2', 'noop' ]

conditions:
  service_debug_unset: {equals : [{get_param: MistralDebug}, '']}

outputs:
  role_data:
    description: Shared role data for the Mistral services.
    value:
      service_name: mistral_base
      config_settings:
        mistral::database_connection:
          make_url:
            scheme: {get_param: [EndpointMap, MysqlInternal, protocol]}
            username: mistral
            password: {get_param: MistralPassword}
            host: {get_param: [EndpointMap, MysqlInternal, host]}
            path: /mistral
            query:
              read_default_file: /etc/my.cnf.d/tripleo.cnf
              read_default_group: tripleo
        mistral::notification_driver: {get_param: NotificationDriver}
        mistral::rabbit_userid: {get_param: RabbitUserName}
        mistral::rabbit_password: {get_param: RabbitPassword}
        mistral::rabbit_use_ssl: {get_param: RabbitClientUseSSL}
        mistral::rabbit_port: {get_param: RabbitClientPort}
        mistral::debug:
          if:
          - service_debug_unset
          - {get_param: Debug }
          - {get_param: MistralDebug }
        mistral::keystone_password: {get_param: MistralPassword}
        mistral::keystone_tenant: 'service'
        mistral::auth_uri: {get_param: [EndpointMap, KeystoneInternal, uri]}
        mistral::keystone_ec2_uri:
          list_join:
          - ''
          - - {get_param: [EndpointMap, KeystoneV3Internal, uri]}
            - '/ec2tokens'
        mistral::identity_uri: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix]}
      service_config_settings:
        keystone:
          mistral::keystone::auth::tenant: 'service'
          mistral::keystone::auth::public_url: {get_param: [EndpointMap, MistralPublic, uri]}
          mistral::keystone::auth::internal_url: {get_param: [EndpointMap, MistralInternal, uri]}
          mistral::keystone::auth::admin_url: {get_param: [EndpointMap, MistralAdmin, uri]}
          mistral::keystone::auth::password: {get_param: MistralPassword}
          mistral::keystone::auth::region: {get_param: KeystoneRegion}
        mysql:
          mistral::db::mysql::user: mistral
          mistral::db::mysql::host: {get_param: [EndpointMap, MysqlInternal, host_nobrackets]}
          mistral::db::mysql::dbname: mistral
          mistral::db::mysql::password: {get_param: MistralPassword}
          mistral::db::mysql::allowed_hosts:
            - '%'
            - "%{hiera('mysql_bind_host')}"
