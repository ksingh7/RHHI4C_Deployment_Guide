heat_template_version: pike

description: >
  Contrail Config service deployment using puppet, this YAML file
  creates the interface between the HOT template
  and the puppet manifest that actually installs
  and configures Contrail Config.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ContrailConfigIfmapUserName:
    description: Ifmap user name
    type: string
    default: 'api-server'
  ContrailConfigIfmapUserPassword:
    description: Ifmap user password
    type: string
    default: 'api-server'
  ContrailConfigPort:
    default: 8082
    description: Contrail Config Api port
    type: number

resources:
  ContrailBase:
    type: ./contrail-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role Contrail Config using composable services.
    value:
      service_name: contrail_config
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - contrail::config::ifmap_password: {get_param: ContrailConfigIfmapUserPassword}
            contrail::config::ifmap_username: {get_param: ContrailConfigIfmapUserName}
            contrail::config::listen_ip_address: {get_param: [ServiceNetMap, ContrailConfigNetwork]}
            contrail::config::listen_port: {get_param: ContrailConfigPort}
            contrail::config::redis_server: '127.0.0.1'
            contrail::config::host_ip: {get_param: [ServiceNetMap, ContrailConfigNetwork]}
      step_config: |
        include ::tripleo::network::contrail::config
